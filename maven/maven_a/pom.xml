<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sakura.maven</groupId>
    <artifactId>maven_a</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>


        <!--        解决依赖冲突（如何选择重复依赖）方式-->
        <!--        依赖路径长度相同情况下，则“先声明优先”（第二原则）-->
        <!--        A—>E—>X(version 0.0.1)-->
        <!--        A—>F—>X(version 0.0.2)-->
        <!--        在\<depencies>\</depencies>中，先声明的，路径相同，会优先选择！-->

        <dependency>
            <groupId>com.sakura.maven</groupId>
            <artifactId>maven_c</artifactId>
            <version>1.0-SNAPSHOT</version>
            <!--     依赖排除       -->
            <!--      此处就想使用B的druid，所以排除传C      -->
            <exclusions>
                <exclusion>
                    <groupId>com.alibaba</groupId>
                    <artifactId>druid</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!--    测试工程依赖传递    -->

        <!--        概念**-->
        <!--        假如有Maven项目A，项目B依赖A，项目C依赖B。那么我们可以说 C依赖A。也就是说，依赖的关系为：C—>B—>A， 那么我们执行项目C时，会自动把B、A都下载导入到C项目的jar包文件夹中，
                    这就是依赖的传递性。-->

        <!--        **作用**-->
        <!--        -   简化依赖导入过程-->
        <!--        -   确保依赖版本正确-->
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>maven_b</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!--   解决依赖冲突（如何选择重复依赖）方式     -->
        <!--    自动选择原则
        - 短路优先原则（第一原则）
          A—>B—>C—>D—>E—>X(version 0.0.1)
          A—>F—>X(version 0.0.2)
          则A依赖于X(version 0.0.2)。    -->
        <!--   测试看是使用b的druid,还是自身的druid,使用自身     -->
        <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
        <!--        <dependency>-->
        <!--            <groupId>com.alibaba</groupId>-->
        <!--            <artifactId>druid</artifactId>-->
        <!--            <version>1.2.8</version>-->
        <!--        </dependency>-->


    </dependencies>

</project>